TARGET = mudclient.elf

# Updated source paths
SRC = $(wildcard src/*.c src/lib/*.c src/ui/*.c src/custom/*.c)

# Exclude non-Dreamcast source files
SRC := $(filter-out src/mudclient-wii.c src/mudclient-3ds.c src/scene-3ds-gl.c src/gl/shader.c, $(SRC))

# Include rsa-tiny.c explicitly
SRC += src/lib/rsa/rsa-tiny.c
KOS_PORTS := /opt/toolchains/dc/kos-ports
CFLAGS += -I$(KOS_BASE)/addons/include/stb

ifdef GLDC
SRC += src/gl/vertex-buffer.c
SRC += src/gl/textures/model_textures.c
SRC += src/gl/textures/entities.c
SRC += src/gl/textures/fonts.c
SRC += src/gl/textures/media.c
endif

# Compiler Flags (Common)
CFLAGS += -fwrapv -std=gnu99 -DSDL_MAIN_HANDLED -DREVISION_177 -DDREAMCAST # -DTCP_NODELAY # -DSKIP_MODELS
CFLAGS += -I$(KOS_BASE)/include/GL

# Linker Flags (Common)
LDFLAGS += -L$(KOS_BASE)/addons/lib/$(KOS_ARCH) -lppp -lstb_image -lz -lm -lGL

# SDL Configuration
ifdef SDL2
    $(info Building with SDL2-dreamcastSDL2)
    SRC := $(filter-out src/mudclient-sdl12.c, $(SRC))  # Remove SDL1.2
#    SRC += src/mudclient-sdl2.c   Include SDL2
    SDL_DIR = /opt/toolchains/dc/kos/addons
    SDL_CFLAGS = -I$(SDL_DIR)/include/SDL2
    SDL_LDFLAGS = -L$(SDL_DIR)/lib/dreamcast -lSDL2
    CFLAGS += -DSDL2 $(SDL_CFLAGS)
    LDFLAGS += $(SDL_LDFLAGS)
else ifdef SDL12
    $(info Building with GPFTroy SDL1.2-DreamHAL--GLDC)
    SRC := $(filter-out src/mudclient-sdl2.c src/mudclient-sdl.c, $(SRC))
    #SRC += src/mudclient-sdl12.c  # Include SDL1.2 implementation **only once**
    SDL_DIR = $(KOS_BASE)/addons
    SDL_CFLAGS = -I$(SDL_DIR)/include/SDL
    SDL_LDFLAGS = -L$(SDL_DIR)/lib/$(KOS_ARCH) -lSDL
    CFLAGS += -DSDL12 $(SDL_CFLAGS)
    LDFLAGS += $(SDL_LDFLAGS)
else
    $(error Must define either SDL2=1 or SDL12=1)
endif

# GLdc Configuration (OpenGL Rendering)
ifdef GLDC
    $(info Building for GLdc Rendering)
    CFLAGS += -DRENDER_GL
    CFLAGS += -DGLDC_GL
else
    $(info Building in software rendering mode)
    CFLAGS += -DRENDER_SW
endif

# GLdc SDL1.2 Video Backend Mode (OpenGL Blitting)
ifdef GLDC_SDL
    $(info Building with SDL1.2 composited with GLdc)
    CFLAGS += -DGLDC_VIDEO
    CFLAGS += -DRENDER_SW
endif

# Suppress specific warnings
CFLAGS += -Wno-redundant-decls -Wno-unused-function -Wno-unused-variable
CFLAGS += -Wno-sign-compare -Wno-pointer-sign
CFLAGS += -Wno-strict-aliasing

# Debugging and optimization flags
ifdef DEBUG
CFLAGS += -Wall -Wextra -pedantic -g -v
LDFLAGS += -v
else
CFLAGS += -Os -ffast-math
LDFLAGS += -s
endif

# Generate object files
OBJS = $(SRC:.c=.o)

# Include KOS build rules
include $(KOS_BASE)/Makefile.rules

# Debugging Info
debug:
	@echo "Sources: $(SRC)"
	@echo "Objects: $(OBJS)"
	@echo "Using SDL version: $(if $(findstring SDL2,$(CFLAGS)), SDL2 SDL2-dreamcastSDL2, KOS default SDL1.2)"
	@echo "CFLAGS: $(CFLAGS)"
	@echo "LDFLAGS: $(LDFLAGS)"

# Build rules
all: rm-elf $(TARGET)

clean: rm-elf
	-rm -f $(OBJS)

rm-elf:
	-rm -f $(TARGET)

%.o: %.c
	kos-cc $(CFLAGS) -c $< -o $@

$(TARGET): $(OBJS)
	@echo "Linking $(TARGET)..."
	kos-cc $(CFLAGS) -o $(TARGET) $(OBJS) $(LDFLAGS)

run: $(TARGET)
	$(KOS_LOADER) $(TARGET)

dist: $(TARGET)
	-rm -f $(OBJS)
	$(KOS_STRIP) $(TARGET)

$(info Filtered source files: $(SRC))

# CDI Image Generation
CDI_OUTPUT = RuneScape.cdi
CDI_CACHE_DIR = ./cache

ifdef CDI
    $(info Dreamcast CDI Image Generation Toggled.)
    POST_BUILD_CMD = mkdcdisc -e $(TARGET) -d $(CDI_CACHE_DIR) -o $(CDI_OUTPUT) -N
else
    POST_BUILD_CMD = @echo "CDI=1 not set, skipping CDI generation."
endif

all: rm-elf $(TARGET)
	$(POST_BUILD_CMD)
